{
  "name": "SUI",
  "scopeName": "source.sui",
  "fileTypes": ["sui", "html"],
  "patterns": [
    {
      "include": "#html"
    },
    {
      "include": "#sui-expressions"
    },
    {
      "include": "#control-structures"
    }
  ],
  "repository": {
    "html": {
      "patterns": [
        {
          "include": "text.html.basic"
        }
      ]
    },
    "sui-expressions": {
      "patterns": [
        {
          "name": "meta.template.expression.sui",
          "begin": "{{|{(?!{)",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.template-expression.begin.sui" }
          },
          "end": "}}|}(?!})",
          "endCaptures": {
            "0": { "name": "punctuation.definition.template-expression.end.sui" }
          },
          "patterns": [
            { "include": "#expression-content" }
          ]
        }
      ]
    },
    "expression-content": {
      "patterns": [
        { "include": "#keywords" },
        { "include": "#operators" },
        { "include": "#strings" },
        { "include": "#numbers" },
        { "include": "#booleans" },
        { "include": "#variables-and-functions" },
        { "include": "#objects" },
        { "include": "#parentheses" }
      ]
    },
    "variables-and-functions": {
      "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*(\\.[a-zA-Z_][a-zA-Z0-9_]*)*)\\b",
      "name": "variable.parameter.sui"
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.sui",
          "match": "\\b(if|else|else\\s+if|each|in|snippet|template|slot)\\b"
        },
        {
          "name": "keyword.operator.logical.sui",
          "match": "\\b(and|or|not)\\b"
        },
        {
          "name": "variable.language.this.sui",
          "match": "\\bthis\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.sui",
          "match": "(==|!=|<|>|<=|>=)"
        },
        {
          "name": "keyword.operator.arithmetic.sui",
          "match": "(\\+|-|\\*|/|%)"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.single.sui",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.sui",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.double.sui",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.sui",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "name": "constant.numeric.sui",
      "match": "\\b[0-9]+(\\.[0-9]+)?\\b"
    },
    "booleans": {
      "name": "constant.language.boolean.sui",
      "match": "\\b(true|false)\\b"
    },
    "objects": {
      "name": "meta.object.sui",
      "begin": "\\bobject\\b",
      "end": "(?=}}|}(?!}))",
      "patterns": [
        {
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(=)",
          "captures": {
            "1": { "name": "variable.other.property.sui" },
            "2": { "name": "keyword.operator.assignment.sui" }
          }
        },
        { "include": "#expression-content" }
      ]
    },
    "parentheses": {
      "begin": "\\(",
      "end": "\\)",
      "patterns": [
        { "include": "#expression-content" }
      ]
    },
    "control-structures": {
      "patterns": [
        {
          "name": "meta.control.each.sui",
          "begin": "({\\s*(#each)\\s+)",
          "beginCaptures": {
            "1": { "name": "meta.brace.curly.sui" },
            "2": { "name": "keyword.control.each.sui" }
          },
          "end": "}",
          "patterns": [
            {
              "match": "\\b(in)\\b",
              "name": "keyword.control.in.sui"
            },
            { "include": "#expression-content" }
          ]
        },
        {
          "name": "meta.control.if.sui",
          "begin": "({\\s*(#if)\\s+)",
          "beginCaptures": {
            "1": { "name": "meta.brace.curly.sui" },
            "2": { "name": "keyword.control.if.sui" }
          },
          "end": "}",
          "patterns": [
            { "include": "#expression-content" }
          ]
        },
        {
          "name": "meta.control.else-if.sui",
          "begin": "({\\s*(else\\s+if)\\s+)",
          "beginCaptures": {
            "1": { "name": "meta.brace.curly.sui" },
            "2": { "name": "keyword.control.else-if.sui" }
          },
          "end": "}",
          "patterns": [
            { "include": "#expression-content" }
          ]
        },
        {
          "name": "meta.control.else.sui",
          "match": "({\\s*(else)\\s*})",
          "captures": {
            "1": { "name": "meta.brace.curly.sui" },
            "2": { "name": "keyword.control.else.sui" }
          }
        }
      ]
    }
  }
}
