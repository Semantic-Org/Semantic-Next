/* src/components/modal/css/shadow/content/modal.css */
@layer component.content.modal {
  dialog {
    position: fixed;
    width: inherit;
    outline: none;
    border: none;
    background-color: transparent;
    overflow: visible;
  }
  dialog {
    display: none;
    flex-direction: column;
    opacity: 0;
    scale: 0.8;
    transition: var(--modal-dialog-transition);
  }
  dialog[open] {
    display: flex;
    opacity: 1;
    scale: 1;
  }
  @starting-style {
    dialog[open] {
      opacity: 0;
      scale: 0.8;
    }
  }
  dialog::backdrop {
    background-color: rgba(0, 0, 0, 0);
    transition: var(--modal-dimmer-transition);
  }
  dialog[open]::backdrop {
    background: var(--modal-dimmer-background);
  }
  @starting-style {
    dialog[open]::backdrop {
      background: rgba(0, 0, 0, 0);
    }
  }
  dialog .modal {
    background: var(--modal-background);
    max-width: var(--modal-max-width);
    border-radius: var(--modal-border-radius);
    box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);
    transition: var(--modal-transition);
  }
  dialog[open] .modal {
    box-shadow: var(--modal-box-shadow);
  }
  @starting-style {
    dialog[open] .modal {
      box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);
    }
  }
  dialog .close {
    cursor: pointer;
    align-self: flex-end;
    color: #FFF;
    margin: 0;
    font-size: 22px;
    padding: 1rem;
    opacity: 0.6;
    transition: var(--transition);
  }
  dialog .close:hover {
    opacity: 1;
  }
  dialog .close + .modal {
    margin-right: 3rem;
  }
}

/* src/components/modal/css/shadow/types/glass.css */
@layer component.types.glass {
  .glass.modal {
    backdrop-filter: var(--modal-glass-backdrop-filter);
    box-shadow: var(--modal-glass-box-shadow);
    background: var(--modal-glass-background);
  }
}

/* src/components/modal/css/shadow/variations/aligned.css */
@layer component.variations.aligned;

/* src/components/modal/css/shadow/variations/sizing.css */
@layer component.variations.sizing {
  :host {
    width: var(--modal-medium);
  }
  :host([size="mini"]),
  :host([mini]),
  :host.mini {
    width: var(--modal-mini);
  }
  :host([size="tiny"]),
  :host([tiny]),
  :host.tiny {
    width: var(--modal-tiny);
  }
  :host([size="small"]),
  :host([small]),
  :host.small {
    width: var(--modal-small);
  }
  :host([size="large"]),
  :host([large]),
  :host.large {
    width: var(--modal-large);
  }
  :host([size="big"]),
  :host([big]),
  :host.big {
    width: var(--modal-big);
  }
  :host([size="huge"]),
  :host([huge]),
  :host.huge {
    width: var(--modal-huge);
  }
  :host([size="massive"]),
  :host([massive]),
  :host.massive {
    width: var(--modal-massive);
  }
}

/* src/components/modal/css/shadow/modal.css */
