/* src/components/card/css/shadow/content/card.css */
@layer component.card.content.card {
  :host {
    display: inline-block;
    text-align: var(--card-text-align);
    margin: var(--card-margin);
  }
  .card {
    display: flex;
    flex-direction: var(--card-flex-direction);
    gap: var(--card-gap);
    text-decoration: none;
    border-radius: var(--card-border-radius);
    border: var(--card-border);
    transition: var(--card-transition);
    box-shadow: var(--card-box-shadow);
    background: var(--card-background);
    padding: var(--card-padding);
  }
  .card > :first-child {
    border-radius: inherit;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
  .card > :last-child {
    border-radius: inherit;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
}

/* src/components/card/css/shadow/content/description.css */
@layer component.card.content.description {
  ::slotted(.description),
  .description {
    color: var(--card-description-color);
    font-size: var(--card-description-font-size);
    transition: var(--card-description-transition);
    line-height: var(--card-description-line-height);
  }
}

/* src/components/card/css/shadow/content/header.css */
@layer component.card.content.header {
  ::slotted(.header),
  .header {
    color: var(--card-header-color);
    font-size: var(--card-header-font-size);
    font-weight: var(--card-header-font-weight);
    transition: var(--card-header-transition);
  }
}

/* src/components/card/css/shadow/content/subheader.css */
@layer component.card.content.subheader {
  ::slotted(.subheader),
  .subheader {
    color: var(--card-subheader-color);
    font-size: var(--card-subheader-font-size);
    font-weight: var(--card-subheader-font-weight);
    transition: var(--card-subheader-transition);
  }
}

/* src/components/card/css/shadow/content/image.css */
@layer component.card.content.image {
  .image {
    overflow: hidden;
    margin: var(--card-reverse-padding) var(--card-reverse-padding) 1em;
  }
  ::slotted(.image),
  ::slotted(ui-image),
  .image img {
    display: block;
    width: var(--card-image-width);
    max-width: var(--card-image-max-width);
    object-fit: contain;
  }
}

/* src/components/card/css/shadow/content/icon.css */
@layer component.card.content.icon {
  ::slotted(ui-icon),
  ::slotted(.icon),
  .icon ui-icon {
    font-size: var(--card-icon-font-size);
    margin: var(--card-icon-margin);
    color: var(--card-icon-color);
  }
}

/* src/components/card/css/shadow/content/meta.css */
@layer component.card.content.meta {
  ::slotted(.meta),
  .meta {
    margin-top: var(--card-meta-margin);
    padding-top: var(--card-meta-spacing);
    border-top: var(--card-meta-border);
    display: flex;
    gap: var(--card-meta-gap);
  }
  .meta > * {
    color: var(--card-meta-text-color);
    font-weight: bold;
  }
}

/* src/components/card/css/shadow/states/disabled.css */
@layer component.states.disabled {
  .disabled {
    pointer-events: none;
    opacity: var(--disabled-opacity);
  }
  .clickable-disabled {
    pointer-events: allowed;
  }
}

/* src/components/card/css/shadow/plural/cards.css */
@layer component.card.plural {
  :host(ui-cards) {
    display: block;
    container: host / inline-size;
    margin: var(--cards-margin);
  }
  .component {
    container: component / inline-size;
  }
  .cards {
    display: grid;
    gap: var(--cards-gap);
    grid-auto-rows: 1fr;
    width: 100%;
  }
  ::slotted(ui-card) {
    display: contents;
  }
}

/* src/components/card/css/shadow/variations/basic.css */
@layer component.card.variations.basic {
  .basic.card {
    background: var(--card-basic-background);
    box-shadow: var(--card-basic-box-shadow);
    border: var(--card-basic-border);
  }
}

/* src/components/card/css/shadow/variations/count.css */
@layer component.card.variations.count {
  .cards.one {
    grid-template-columns: 1fr;
  }
  .cards.two {
    grid-template-columns: repeat(2, 1fr);
  }
  .cards.three {
    grid-template-columns: repeat(3, 1fr);
  }
  .cards.four {
    grid-template-columns: repeat(4, 1fr);
  }
  .cards.five {
    grid-template-columns: repeat(5, 1fr);
  }
  .cards.six {
    grid-template-columns: repeat(6, 1fr);
  }
  .cards.seven {
    grid-template-columns: repeat(7, 1fr);
  }
  .cards.eight {
    grid-template-columns: repeat(8, 1fr);
  }
}

/* src/components/card/css/shadow/variations/fluid.css */
@layer component.card.variations.fluid {
  .fluid.card {
    width: 100%;
  }
}

/* src/components/card/css/shadow/variations/horizontal.css */
@layer component.card.variations.horizontal {
  .horizontal {
    flex-direction: var(--card-horizontal-flex-direction);
    gap: var(--card-horizontal-gap);
    text-align: left;
  }
  .horizontal ::slotted(.image),
  .horizontal ::slotted(ui-image),
  .horizontal .image {
    margin: var(--card-reverse-padding);
    margin-bottom: 0;
    max-width: var(--card-horizontal-image-max-width);
  }
  .horizontal ::slotted(ui-icon),
  .horizontal ::slotted(.icon),
  .horizontal .icon ui-icon {
    font-size: var(--card-horizontal-icon-font-size);
    margin: var(--card-horizontal-icon-margin);
  }
  .horizontal ::slotted(.header),
  .horizontal .header {
    font-size: var(--card-horizontal-header-size);
  }
  .horizontal :first-child {
    border-radius: inherit;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .horizontal :last-child {
    border-radius: inherit;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

/* src/components/card/css/shadow/variations/link.css */
@layer component.card.variations.link {
  .link.card,
  a.card {
    cursor: pointer;
    color: inherit;
  }
  .link.card:hover,
  a.card:hover {
    background: var(--card-link-hover-background);
    box-shadow: var(--card-link-hover-box-shadow);
    border: var(--card-link-hover-border);
  }
  .link.card:hover ::slotted(.header),
  .link.card:hover .header,
  a.card:hover ::slotted(.header),
  a.card:hover .header {
    color: var(--card-link-hover-header-color);
  }
  .link.card:hover ::slotted(ui-icon),
  .link.card:hover ::slotted(.icon),
  .link.card:hover .icon ui-icon,
  a.card:hover ::slotted(ui-icon),
  a.card:hover ::slotted(.icon),
  a.card:hover .icon ui-icon {
    color: var(--card-link-hover-icon-color);
  }
}

/* src/components/card/css/shadow/variations/spaced.css */
@layer component.card.variations.spaced {
  .cards.spaced {
    gap: var(--cards-spaced-gap);
  }
  .cards.very-spaced {
    gap: var(--cards-very-spaced-gap);
  }
}

/* src/components/card/css/shadow/variations/doubling.css */
@layer component.card.variations.doubling {
  @container component (max-width: var(--card-doubling-breakpoint)) {
    .doubling.cards {
    }
  }
}

/* src/components/card/css/shadow/variations/stackable.css */
@layer component.card.variations.stackable {
  .component {
    --card-stackable-comparison: max(calc(100cqi - var(--card-stackable-breakpoint)), 0px);
  }
  @container component style(--card-stackable-comparison: 0) {
    .stackable.cards {
      display: flex;
      flex-direction: column;
    }
  }
}

/* src/components/card/css/shadow/card.css */
