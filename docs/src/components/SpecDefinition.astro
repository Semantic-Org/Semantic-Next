---
import * as SpecExports from '@semantic-ui/specs';
import { toTitleCase } from '@semantic-ui/utils';
import { CodeExample } from '@components/CodeExample/CodeExample.js';
import UIComponent from '@components/UIComponent.astro';

const { specName, plural } = Astro.props;

const { SpecReader, ...Specs } = SpecExports;

const spec = Specs[specName];
const componentSpec = new SpecReader(spec, {plural});
const componentName = componentSpec.getComponentName();

const componentDefinition = componentSpec.getDefinition();
const sections = ['types', 'content', 'states', 'variations'];
---
{sections.map((section) => (
  <>
    <h2>{toTitleCase(section)}</h2>
    {componentDefinition[section].map((type) => (
      <>
        {type.examples.map((example, index) => (
          <>
            <CodeExample client:load
              title={(index == 0) ? type.title : undefined }
              description={type.description}
              code={example.code}
            >
              {example.components.map((component) => (
                <UIComponent client:load name={componentName} attributes={component.attributes}>
                  <Fragment set:html={component.html} />
                </UIComponent>
              ))}
            </CodeExample>
          </>
        ))}
      </>
    ))}
  </>
))}
