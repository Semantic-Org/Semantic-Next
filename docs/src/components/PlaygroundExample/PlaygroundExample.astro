---
import { getCollection } from 'astro:content';
import { getExampleFiles, addPlaygroundInjections, getExampleID, getSandboxURL } from '@helpers/playground.js';

import CodePlayground from '@components/CodePlayground/CodePlayground.js';

const { id, direction, height } = Astro.props;
const matchingExamples = await getCollection('examples', ({ data }) => {
  return getExampleID(data) == id;
});
const example = matchingExamples[0].data;
const exampleType = example.exampleType;
const allExampleFiles = await import.meta.glob(`../../examples/**`, {
  query: '?raw',
});
let files = await getExampleFiles({
  contentID: getExampleID(example),
  allFiles: allExampleFiles,
  basePath: '../../examples/',
  includeFolder: example.exampleType == 'folder',
  hideBoilerplate: true,
  includePlaygroundInjections: true,
  includeLog: example.exampleType == 'log',
});
const sandboxURL = getSandboxURL();
const inlineDirection = direction;
const exampleURL = `/examples/${id}/`;
const saveID = `example-${id}`;
---
<CodePlayground client:only
  files={files}
  maxHeight={height}
  inline=true
  saveState=true
  saveID={saveID}
  inlineDirection={inlineDirection}
  exampleURL={exampleURL}
  sandboxURL={sandboxURL}
  ></CodePlayground>
