---
import { getCollection } from 'astro:content';
import { each, tokenize } from '@semantic-ui/utils';
import {
  getExampleFiles,
  addPlaygroundInjections,
  getSandboxURL,
  getPanelIndexes,
} from '@helpers/playground.js';
import Playground from '@layouts/Playground.astro';
import CodePlayground from '@components/CodePlayground/CodePlayground.js';
import Sidebar from '@components/Sidebar.astro';

const { entry } = Astro.props;
export async function getStaticPaths() {
  const entries = await getCollection('examples');
  const paths = [];
  each(entries, (entry) => {
    paths.push({
      params: { slug: `${entry.slug}` },
      props: { entry },
    });
  });
  return paths;
}
const sandboxURL = getSandboxURL();
const example = entry.data;
const exampleID = example.id || tokenize(example.title);
const allExampleFiles = await import.meta.glob(`../../examples/**`, {
  query: '?raw',
});
let files = await getExampleFiles(example, allExampleFiles);
files = addPlaygroundInjections(files, example.exampleType);

const panelIndexes = getPanelIndexes(files, example.exampleType);

const searchMeta = {
  ...entry.data,
  pageType: 'Example',
}

---

<Playground searchMeta={searchMeta} showSidebar=true>
  <page>
    <Sidebar></SideBar>
    <CodePlayground client:only
      files={files}
      example={example}
      sandboxURL={sandboxURL}
      panelIndexes={panelIndexes}
      ></CodePlayground>
  </page>
</Playground>
