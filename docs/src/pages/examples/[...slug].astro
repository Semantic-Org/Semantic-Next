---
import { getCollection } from 'astro:content';
import { each, tokenize } from '@semantic-ui/utils';
import {
  getExampleFiles,
  addPlaygroundInjections,
} from '@helpers/playground.js';
import Playground from '@layouts/Playground.astro';

const { entry } = Astro.props;
export async function getStaticPaths() {
  const entries = await getCollection('examples');
  const paths = [];
  each(entries, (entry) => {
    paths.push({
      params: { slug: `${entry.slug}` },
      props: { entry },
    });
  });
  return paths;
}

const example = entry.data;
const exampleID = example.id || tokenize(example.title);
const allExampleFiles = await import.meta.glob(`../../example-files/**`, {
  query: '?raw',
});
let files = await getExampleFiles(example, allExampleFiles);
console.log(files);
files = addPlaygroundInjections(files);
console.log(files);
const projectConfig = {
  files: files
};
---

<Playground {...entry.data}>
  <script>
    import 'playground-elements/playground-project.js';
    import 'playground-elements/playground-file-editor.js';
    import 'playground-elements/playground-preview.js';
  </script>
  <playground-project id="source" sandbox-base-url="/playground"
  ></playground-project>
  <script define:vars={{ projectConfig }}>
    document.querySelector('playground-project').config = projectConfig;
  </script>
  <playground>
    <panes>
      <pane>
        <label>Component JS</label>
        <playground-tab-bar editor="editor1" editable-file-system
        ></playground-tab-bar>
        <playground-file-editor
          line-numbers
          project="source"
          filename="component.js"
        >
        </playground-file-editor>
      </pane>
      <pane>
        <label>Component Template</label>
        <playground-tab-bar editor="editor1" editable-file-system
        ></playground-tab-bar>
        <playground-file-editor
          line-numbers
          project="source"
          filename="component.html"
        >
        </playground-file-editor>
      </pane>
      <pane>
        <label>Component CSS</label>
        <playground-tab-bar editor="editor1" editable-file-system
        ></playground-tab-bar>
        <playground-file-editor
          line-numbers
          project="source"
          filename="component.css"
        >
        </playground-file-editor>
      </pane>
    </panes>
    <panes>
      <pane>
        <label>Page HTML</label>
        <playground-file-editor
          line-numbers
          project="source"
          filename="index.html"
        >
        </playground-file-editor>
      </pane>
      <pane>
        <label>Page CSS</label>
        <playground-file-editor
          line-numbers
          project="source"
          filename="index.css"
        >
        </playground-file-editor>
      </pane>
      <pane class="preview">
        <playground-preview project="source"> </playground-preview>
      </pane>
    </panes>
  </playground>
  <script>
    const editor = document.querySelectorAll('playground-file-editor');
  </script>
</Playground>
