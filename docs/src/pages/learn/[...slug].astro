---
import { getCollection } from 'astro:content';
import { each, tokenize } from '@semantic-ui/utils';
import { getExampleFiles, addPlaygroundInjections, getSandboxURL, getPanelIndexes } from '@helpers/playground.js';

import Playground from '@layouts/Playground.astro';
import LearnExample from '@components/LearnExample/LearnExample.js';
import Sidebar from '@components/Sidebar.astro';

const { entry } = Astro.props;

/* Make paths */
export async function getStaticPaths() {
  const entries = await getCollection('learn');
  const paths = [];
  each(entries, (entry) => {
    console.log(entry.slug);
    paths.push({
      params: { slug: `${entry.slug}` },
      props: { entry },
    });
  });
  return paths;
}

const sandboxURL = getSandboxURL();
const example = 'counter' || entry.data;
const allExampleFiles = await import.meta.glob(`../../examples/**`, {
  query: '?raw',
});
let files = await getExampleFiles(example, allExampleFiles, '../../examples/');
files = addPlaygroundInjections(files, example.exampleType);

const panelIndexes = getPanelIndexes(files, example.exampleType);

const { Content } = await entry.render();

const searchMeta = {
  ...entry.data,
  pageType: 'Learn',
}

const playgroundConfig = {
  files,
  example,
  sandboxURL,
  panelIndexes
};

---

<Playground searchMeta={searchMeta} showSidebar=true>
  <page data-pagefind-body class="text-content">
    <LearnExample client:only
      playgroundConfig={playgroundConfig}
    >
      <pageContent>
        <Content />
      </pageConent>
    </LearnExample>
  </page>
</Playground>
