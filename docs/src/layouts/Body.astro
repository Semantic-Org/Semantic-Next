---
let { title, description, searchMeta, noZoom, padded } = Astro.props;

if(!title) {
  title = 'Semantic UI';
}

import SearchMeta from '@components/SearchMeta.astro';
import NavMenu from '@components/NavMenu/NavMenu.js';

import './Body.css';
import '../css/responsive.css';
import '../css/legacy-sui/input.css';
import '../css/legacy-sui/rail.css';
import '@semantic-ui/core/dist/theme/base.css';
import '@semantic-ui/core/dist/semantic-ui.css';

const baseMeta = {
  title,
  description
};
searchMeta = {
  ...baseMeta,
  ...searchMeta
};

---
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="Content-Language" content="en">
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    {noZoom !== undefined && (
      <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    )}
  </head>
  <body class={padded ? 'padded' : ''}>
    <script>
      import { exportGlobals } from '@semantic-ui/query';
      exportGlobals();
    </script>
    <script is:inline data-astro-rerun>
      if(!window.systemPrefersDark) {
        window.systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      }
      if(!window.currentTheme) {
        window.currentTheme = localStorage.getItem('theme')
          ? localStorage.getItem('theme') :
            systemPrefersDark
            ? 'dark'
            : 'light'
        ;
      }
      document.querySelectorAll('html')[0].classList.add(currentTheme);
    </script>
    <SearchMeta {...searchMeta} />
    <slot />
  </body>
</html>
